
рабочий:
 -запускает и наблюдает за задачами
 -для каждой задачи свой поток, чтобы ждать. 
 -в основном потоке таймеры и обработка сообщений от/для шедулеров
 -общается только с шедулерами, БД не знает 
 -адресов шедулеров тоже не знает, ждет когда к нему обратятся 
 -как только запустил задачу(или нет) на выполнение, сказать шедулеру об этом 
 -если задача вылетела или выполняется больше макс времени 
  остановить задачу и уведомить шедулера об этом
 -когда задача выполнилась, уведомить шедулера и послать ему последнее слово от задачи
 -после запуска ничего не предпринимать, ждать когда шедулер пришлет задачу
 -как только каждый шедулер обращается с задачей первый раз, сказать ему что только запустился, 
  чтобы он снял прошлые задачи, если висят
 -каждую 1 мин слать каждому известному шедулеру сообщение "работаю"
 -каждые 10% выполнения задачи слать шедулеру % выполнения задачи, но не чаще 30 сек
 -если шедулер не отвечает или сеть пропала, всеравно делать свое дело 
  и пытаться отправлять сообщения о том что в работе и статус текущих задач
 -если статус в БД изменился на "отдыхаю", ничего об об этом не знает, работает как обычно,
  просто новые задачи перестанут приходить
 -менеджер (или шедулер) не могут выключить рабочего, 
  менеджер может только установить(снять) в БД статус "отдыхаю" для рабочего и шедулер перестанет слать ему задачи
 -шедулер может обратится к рабочему с просьбой:
   *отключить 
   *не запускать
   *поставить на паузу 
   *снять с паузы
  конкретную задачу, после этого рабочий должен сказать шедулеру "отключена", чтобы тот в БД записал новый статус
 -менеджер НЕ может обратится напрямую к рабочему, все через шедулера
 -рабочий НЕ может обратится напрямую к менеджеру, все через шедулера
 -у рабочего есть очередь сообщений - одна для всех шедулеров, на случай если сеть пропала или связь с шедулером
  и продолжает слать сообщения из очереди пока не дойдут до шедулера
 -сообщение удаляется из очереди, если получен положительный ответ об отправке
 -при отключении завершить все текущие задачи принудительно 
  и сказать всем известным шедулерам что отключаюсь, чтобы сняли задачи 

шедулер:
 -наблюдает за рабочими
 -если рабочий не отвечает, пометить рабочего в БД и слать задачи другому рабочему
 -если рабочий, с которым работаю, давно (2 мин) не говорил, что работает, и не присылал сообщения о задачах,
  пометить рабочего в БД как "неактивный", его задачи перекинуть на другого рабочего
 -если рабочий загружен по максимуму или "отдыхает", не слать ему задачи 
 -если рабочий "проснулся" и говорит о задачах, которые уже назначены другим, игнорировать эти сообщения 
 -если рабочий говорит, что задача запустилась, выполнилась или зависла, пометить задачу в БД
 -если рабочий говорит, что только запустился, заново отправить ему его прошлые задачи, которые еще в работе,
  если последняя задача не влазит, передать ее другому 
 -каждую 1 мин слать КАЖДОМУ активному менеджеру сообщение "работаю"
 -из БД пытаться взять столько задач, сколько еще помещается в карман
 -за новыми задачами в БД лазить максимально часто на сколько возможно, если "карман"(допустимое количество задач) позволяет,
  для этого запускать динамически отдельный поток
 -любые изменения в БД (задача выполнена/в отказе/запущена, рабочий "активен/неактивен" и тд) копить и 
  отправлять скопом каждую 1 сек, для этого запускать динамически отдельный поток
 -задачи выполнять в соответствии с приоритетом 
  и смотреть условие - выполнились ли прошлые задачи для этой задачи
 -если сам не в сети, значит надо перестать следить за рабочими (по времени), ничего не трогать,
  новые задачи из БД не брать, ждать пока появится сеть
 -если обратился менеджер с просьбой:
   *отключить 
   *не запускать
   *поставить на паузу 
   *снять с паузы
  конкретную задачу то надо обратится к рабочему, если задача ему уже передана, и ждать от него ответа
 -шедулер менеджеру на просьбы НЕ отвечает, а все статусы задачи измененные по просьбе менеджера пишет в БД
 -у шедулера есть очередь сообщений - одна для всех рабочих, 
  на случай если сеть пропала или связь с рабочим,
  и продолжает слать сообщения из очереди пока не дойдут до рабочего
 -сообщения в очередь попадают только те, что просит менеджер
 -сообщение удаляется из очереди, если получен положительный ответ об отправке
 -когда только запустился, найти себя в tblSheduler по connectPnt, взять из БД все свои задачи и своих рабочих.
 -при отключении все что есть на данный момент записать в БД
 
менеджер:
 -наблюдает за шедулерами и рабочими ЧЕРЕЗ БД
 -менеджер может обратится к шедулеру и сказать:
   *отключить
   *поставить на паузу
   *снять с паузы
  конкретную задачу.
  Менеджер НЕ ждет ответа от шедулера.
 -если ЛЮБОЙ "активный" шедулер давно (2 мин) не говорил, что работает, то надо пометить его в БД как "неактивный",
  все его задачи объявить как свободные
 -менеджер может установить(снять) в БД статус "отдыхаю" для рабочего и шедулер перестанет слать ему задачи
 -менеджер может установить(снять) в БД статус "отдыхаю" для шедулера и шедулер перестанет брать новые задачи из БД,
  но текущие продолжит отслеживать
 -менеджер НЕ может отключить/перезагрузить шедулера или рабочего, только изменить статус в БД
 -менеджер может ТОЛЬКО добавлять задачи в таблицу tbdTask, удалять задачи НЕ может
 -менеджер может ТОЛЬКО добавлять рабочих в таблицу tblWorker, удалять рабочих НЕ может
 -менеджер может ТОЛЬКО добавлять шедулеров в таблицу tblSheduler, удалять шедулеров НЕ может
 -менеджер может ТОЛЬКО добавлять задачи в общую очередь задач tblQueryTasks, удалять из очереди НЕ может
 -менеджер может менять "карман"(допустимое количество задач) у шедулера и рабочего
 -менеджер может менять rating и executor у рабочего
 -менеджер НЕ может менять connectPnt у шедулера и рабочего
 -менеджер в таблице задач tblTask может:
   *менять скрипт
   *executor
   *среднее и максимальное время выполнения задачи
 -менеджер в очереди задач tblQueryTask пока задача не была взята в работу шедулером может:
   *запретить выполнение задачи
   *изменить приоритет задачи в очереди
   *изменить список предыд задач, которые дбыть выполнены для запуска
   *параметры задачи
 -менеджер НЕ может напрямую обращаться к рабочим, только через шедулер
 -любые изменения в БД отправлять сразу, не копить.
 
 