
рабочий: запускает и наблюдает за задачами
Инт-с  Реал-я 
              -для каждой задачи свой поток, чтобы ждать. 
              -в основном потоке таймеры и обработка сообщений от/для шедулеров
              -общается только с шедулерами, менеджеров и БД не знает 
              -адрес своего шедулера получает при загрузке 
              -как только запустил задачу(или нет) на выполнение, сказать шедулеру об этом 
              -если задача вылетела или выполняется больше макс времени 
               остановить задачу и уведомить шедулера об этом
              -когда задача выполнилась, уведомить шедулера и послать ему последнее слово от задачи
              -после запуска сказать своему шедулеру что "только запустился",
               чтобы он снял прошлые задачи, если висят. 
              -каждые 20 сек слать каждому известному шедулеру сообщение "работаю"
              -каждые 30 сек слать шедулеру % выполнения задачи
              -если шедулер не отвечает или сеть пропала, всеравно делать свое дело 
               и пытаться отправлять сообщения о том что в работе и статус текущих задач
              -если статус в БД изменился на "отдыхаю", ничего об об этом не знает, работает как обычно,
               просто новые задачи перестанут приходить
              -менеджер (или шедулер) не могут выключить рабочего, 
               менеджер может только установить(снять) в БД статус "отдыхаю" для рабочего 
               и шедулер перестанет слать ему задачи
              -шедулер может обратится к рабочему с просьбой:
                *отключить
                *поставить на паузу 
                *снять с паузы
               конкретную задачу, после этого рабочий должен сказать шедулеру "отключена"("поставлена на паузу"..),
               чтобы тот в БД записал новый статус
              -менеджер НЕ может обратится напрямую к рабочему, все через шедулера
              -рабочий НЕ может обратится напрямую к менеджеру, все через шедулера
              -при отключении завершить все текущие задачи принудительно 
               и сказать своему шедулеру, что отключаюсь, чтобы снял задачи 

шедулер: наблюдает за рабочими
Инт-с  Реал-я 
              -рабочие назначены в БД менеджером
              -рабочий присылает кол-во запущенных задач, когда отвечает на новую задачу
              -периодически пинговать "неактивных" рабочих - раз в секунду выбирать какого-то, который "неактивен", и отправлять пустой запрос,
               если ответит что "запущен", отметить у себя и в БД: 
               [пометить рабочего в БД как "активный"]           
              -как только взял задачу из БД, сразу же в этом же запросе отметить в БД:
               [статус задачи - "взята в работу"]
               [записать свой ID]
              -когда задачу отправил рабочему, он ответил что "принял в работу" - отметить в БД:
               [статус задачи - "выполняется"]
               [записать ID рабочего]
              -когда задачу отправил рабочему, а он не отвечает, задачу опять включить в свою очередь,
               ничего с рабочим не делать, возможно кратковременная проблема со связью
              -если рабочий давно (2 мин) не говорил, что работает:
               [пометить рабочего в БД как "неактивный"]
               [для задач, которые в статусе "выполняется" с "моим" ID и с ID рабочего,
                статус поменять на "готова к работе" и убрать мой ID и ID рабочего]
              -если рабочий говорит, что задача выполнилась, отправить в БД:
               ["выполнена"]
               [записать последнее слово от задачи]
              -если рабочий говорит, что задача не запустилась или вывалилась в ошибку, отправить в БД:
               ["ошибка"]
               [записать последнее слово от задачи]
              -если рабочий говорит, что "только запустился", отправить в БД:
               [для задач, которые в статусе "выполняется" с "моим" ID и с ID рабочего,
                статус поменять на "готова к работе" и убрать мой ID и ID рабочего]
              -если рабочий говорит, что "отключаюсь", отправить в БД:
               [пометить рабочего в БД как "неактивный"]
               [для задач, которые в статусе "выполняется" с "моим" ID и с ID рабочего,
                статус поменять на "готова к работе" и убрать мой ID и ID рабочего]
              -если рабочий загружен по максимуму или "отдыхает", не слать ему задачи       
              -из БД пытаться взять столько задач, сколько еще помещается в карман
              -за новыми задачами в БД лазить максимально часто на сколько возможно, если "карман"(допустимое количество задач) позволяет,
               для этого запускать динамически отдельный поток
              -любые изменения в БД (задача выполнена/в отказе/запущена, рабочий "активен/неактивен" и тд) копить и 
               отправлять скопом каждую 1 сек, для этого запускать динамически отдельный поток
              -брать из БД максимум 10000 задач(по 10 на рабочего), брать только те, у которых прошлых задач либо нет, либо завершились уже
              -задачи выполнять в соответствии с приоритетом
              -если сам не в сети, значит надо перестать следить за рабочими (по времени), ничего не трогать,
               новые задачи из БД не брать, ждать пока появится сеть
              -если обратился менеджер с просьбой:
                *отключить 
                *поставить на паузу 
                *снять с паузы
               конкретную задачу то надо обратится к рабочему, если задача ему уже передана, и ждать от него ответа
              -если рабочий ответил на просьбу, сказать менеждеру
              -если рабочий не отвечает на просьбу, отправить в БД, сказать менеджеру что рабочий не отвечает,
               с рабочим ничего не делать, возможно это временная ошибка связи              
              -когда только запустился, найти себя в tblSheduler по connectPnt,
               взять из БД все свои задачи, у которых статус "выполняется", и своих рабочих.
              -при отключении все что есть на данный момент записать в БД
 
менеджер: наблюдает за шедулерами и рабочими ЧЕРЕЗ БД
Инт-с  Реал-я
              -менеджер может обратится к шедулеру и сказать:
                *отключить
                *поставить на паузу
                *снять с паузы
               конкретную задачу.
               Шедулеру надо сообщить ID задачи и connectPnt рабочего.
               Шедулер ответит на просьбу в любом случае.
              -менеджер может пинговать шедулеров
              -менеджер может установить(снять) в БД статус "отдыхаю" для рабочего,
               и сказать об этом его шедулеру, чтоб шедулер перестал слать ему задачи
              -менеджер может установить(снять) в БД статус "отдыхаю" для шедулера,
               и сказать об этом его шедулеру, чтоб шедулер перестал брать новые задачи из БД,
               но текущие продолжит отслеживать
              -менеджер НЕ может отключить/перезагрузить шедулера или рабочего, только изменить статус в БД
              -менеджер может ТОЛЬКО добавлять задачи в таблицу tbdTask, удалять задачи НЕ может
              -менеджер может ТОЛЬКО добавлять рабочих в таблицу tblWorker, удалять рабочих НЕ может
              -менеджер может ТОЛЬКО добавлять шедулеров в таблицу tblSheduler, удалять шедулеров НЕ может
              -менеджер может ТОЛЬКО добавлять задачи в общую очередь задач tblQueryTasks, удалять из очереди НЕ может
              -менеджер может менять "карман"(допустимое количество задач) у шедулера и рабочего
              -менеджер может менять rating и executor у рабочего
              -менеджер НЕ может менять connectPnt у шедулера и рабочего
              -менеджер в таблице задач tblTask может:
                *менять скрипт
                *executor
                *среднее и максимальное время выполнения задачи
              -менеджер в очереди задач tblQueryTask ПОКА задача не была взята в работу шедулером может:
                *запретить выполнение задачи
                *изменить приоритет задачи в очереди
                *изменить список предыд задач, которые дбыть выполнены для запуска
                *параметры задачи
              -менеджер НЕ может напрямую обращаться к рабочим, только через шедулер
              -любые изменения в БД отправлять сразу, не копить.
 
 