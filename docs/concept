
рабочий:
 -запускает и наблюдает за задачами
 -для каждой задачи свой поток, чтобы ждать. 
 -в основном потоке таймеры и обработка сообщений от/для шедулеров
 -общается только с шедулерами, БД не знает 
 -адресов шедулеров тоже не знает, ждет когда к нему обратятся 
 -как только запустил задачу(или нет) на выполнение, сказать шедулеру об этом 
 -если задача вылетела или выполняется больше макс времени 
  остановить задачу и уведомить шедулера об этом
 -когда задача выполнилась, уведомить шедулера и послать ему последнее слово от задачи
 -после запуска ничего не предпринимать, ждать когда шедулер пришлет задачу
 -как только каждый шедулер обращается с задачей первый раз, сказать ему что только запустился, 
  чтобы он снял прошлые задачи, если висят
 -каждую 1 мин слать каждому известному шедулеру сообщение "работаю"
 -каждые 10% выполнения задачи слать шедулеру % выполнения задачи, но не чаще 30 сек
 -если шедулер не отвечает или сеть пропала, всеравно делать свое дело 
  и пытаться отправлять сообщения о том что в работе и статус текущих задач
 -при отключении завершить все текущие задачи принудительно 
  и сказать всем известным шедулерам что отключаюсь, чтобы сняли задачи 
 -если статус в БД изменился на "отдыхаю", ничего об об этом не знает, работает как обычно,
  просто новые задачи перестанут приходить
 -менеджер (или шедулер) не могут выключить рабочего, 
  менеджер может только установить(снять) в БД статус "отдыхаю" для рабочего и шедулер перестанет слать ему задачи
 -шедулер может обратится напрямую к рабочему и сказать "отключить конкретную задачу", 
  после этого рабочий должен сказать шедулеру "отключена", чтобы тот в БД записал новый статус
 -шедулер может обратится напрямую к рабочему и сказать "поставить на паузу" или "запустить с паузы" конкретную задачу,
  после этого рабочий должен сказать шедулеру "поставлена на паузу" или "запущена", чтобы тот в БД записал новый статус
 -менеджер НЕ может обратится напрямую к рабочему, все через шедулера
 -рабочий НЕ может обратится напрямую к менеджеру, все через шедулера
 -у рабочего есть очередь сообщений для каждого шедулера, на случай если сеть пропала или связь с шедулером
  и продолжает слать сообщения из очереди пока не дойдут до шедулера
 -сообщение удаляется из очереди, если получен положительный ответ об отправке

шедулер:
 -наблюдает за рабочими, рабочему может только слать новую задачу, больше ничего не говорит
 -если рабочий не отвечает, пометить рабочего в БД и слать задачи другому рабочему
 -если рабочий давно (5 мин) не говорил, что работает, и не присылал сообщения о задачах,
  его задачи надо перекинуть на другого рабочего
 -если рабочий загружен по максимуму или "отдыхает", не слать ему задачи 
 -если рабочий "проснулся" и говорит о задачах, которые уже назначены другим, игнорировать эти сообщения 
 -если рабочий говорит, что задача запустилась, выполнилась или зависла, пометить задачу в БД
 -если рабочий говорит, что только запустился, снять с него все его прошлые задачи, которые еще в работе,
  кроме последней отправленной, на которую он ответил только что 
 -из БД пытаться взять столько задач, сколько еще помещается в карман
 -за новыми задачами в БД лазить максимально часто на сколько возможно, если карман позволяет
 -помечать (выполнена/в отказе/запущена) задачи как накопится несколько штук, но не реже 10 сек
 -задачи выполнять в соответствии с приоритетом 
  и смотреть условие - выполнились ли прошлые задачи для этой задачи
 -если сам не в сети, значит надо перестать следить за рабочими (по времени), ничего не трогать,
  новые задачи из БД не брать, ждать пока появится сеть
 -когда только запустился выгребсти из БД все свои задачи и своих рабочих
 -при отключении все что есть на данный момент записать в БД
 -если обратился менеджер с просьбой не запускать конкретную задачу (???)
 -у шедулера есть очередь сообщений для каждого менеджера, на случай если сеть пропала или связь с менеджером
  и продолжает слать сообщения из очереди пока не дойдут до менеджера
 -сообщение удаляется из очереди, если получен положительный ответ об отправке
 
менеджер:
 -наблюдает за шедулерами и рабочими ЧЕРЕЗ БД, напрямую никого о состоянии не спрашивает
 -менеджер может обратится напрямую к рабочему и сказать "поставить на паузу" или "запустить с паузы" конкретную задачу
 -менеджер может обратится напрямую к рабочему и сказать "отключить конкретную задачу"
 -менеджер может установить(снять) в БД статус "отдыхаю" для рабочего и шедулер перестанет слать ему задачи
 -менеджер может установить(снять) в БД статус "отдыхаю" для шедулера и шедулер перестанет брать новые задачи из БД, 
  но текущие продолжит отслеживать
 -менеджер заполняет общую очередь задач (tblQueryTasks) в БД, в зависимости от того что нарисует юзер в GUI
 -менеджер может только добавлять задачи в очередь, удалять из очереди НЕ может
 -менеджер может изменить статус задачи в очереди, только пока задача не была взята в работу шедулером
 -менеджер может обратится к шедулеру с просьбой не запускать(а также отключить, поставить(снять) на паузу) конкретную задачу,
  шедулер должен изменить статус задачи в БД. 



 